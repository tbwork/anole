<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.anole.infrastructure.dao.AnoleConfigItemMapper">
  <resultMap id="BaseResultMap" type="org.anole.infrastructure.model.AnoleConfigItem">
    <id column="Id" jdbcType="INTEGER" property="id" />
    <result column="Key" jdbcType="VARCHAR" property="key" />
    <result column="EnvName" jdbcType="VARCHAR" property="envName" />
    <result column="LastOperator" jdbcType="VARCHAR" property="lastOperator" />
    <result column="CreateTime" jdbcType="TIMESTAMP" property="createTime" />
    <result column="UpdateTime" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="Value" jdbcType="LONGVARCHAR" property="value" />
  </resultMap>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from anole_config_item
    where Id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="org.anole.infrastructure.model.AnoleConfigItem">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into anole_config_item (`Key`, EnvName, LastOperator, 
      CreateTime, UpdateTime, `Value`
      )
    values (#{key,jdbcType=VARCHAR}, #{envName,jdbcType=VARCHAR}, #{lastOperator,jdbcType=VARCHAR}, 
      #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}, #{value,jdbcType=LONGVARCHAR}
      )
  </insert>
  <update id="updateByPrimaryKey" parameterType="org.anole.infrastructure.model.AnoleConfigItem">
    update anole_config_item
    set `Key` = #{key,jdbcType=VARCHAR},
      EnvName = #{envName,jdbcType=VARCHAR},
      LastOperator = #{lastOperator,jdbcType=VARCHAR},
      CreateTime = #{createTime,jdbcType=TIMESTAMP},
      UpdateTime = #{updateTime,jdbcType=TIMESTAMP},
      `Value` = #{value,jdbcType=LONGVARCHAR}
    where Id = #{id,jdbcType=INTEGER}
  </update>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select Id, `Key`, EnvName, LastOperator, CreateTime, UpdateTime, `Value`
    from anole_config_item
    where Id = #{id,jdbcType=INTEGER}
  </select>
  <select id="selectAll" resultMap="BaseResultMap">
    select Id, `Key`, EnvName, LastOperator, CreateTime, UpdateTime, `Value`
    from anole_config_item
  </select>
</mapper>